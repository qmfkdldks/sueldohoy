{"version":3,"file":"static/webpack/static/development/pages/index.js.0b438dbb75539bee15c8.hot-update.js","sources":["webpack:///./components/SalaryForm/index.js"],"sourcesContent":["import React from 'react'\nimport {\n    Box, Button, Form, FormField, Heading, Paragraph, Icons, WorldMap\n} from 'grommet'\nimport { Gremlin, Currency, Home } from 'grommet-icons'\nimport fetch from 'isomorphic-unfetch'\nimport SalaryResult from '../SalaryResult'\nimport DateMaskedInput from '../DateMaskedInput'\n\nfunction getD(index, data, date, value, icon = <Currency />) {\n    const past_obj = data.find((record) => (record.d == date))\n\n    if (past_obj) {\n        const past_ratio = past_obj.v\n        const past_available = parseFloat(value) / past_ratio\n\n        const current_ratio = data[data.length - 1].v\n        const current_necessary = (past_available * current_ratio)\n        const object = { index: index, icon: icon, could: past_available.toFixed(2), need: current_necessary.toFixed(2) }\n        console.log(object)\n        return object\n    }\n    return {}\n}\n\nclass SalaryForm extends React.Component {\n    state = {\n        data: [],\n        date: \"\",\n        value: \"\",\n        usd: [],\n        cer: [],\n        uva: [],\n        uvi: [],\n        idle: true,\n        fetching: true\n    }\n\n    componentDidMount() {\n        this.fetchData()\n    }\n\n    fetchData = async () => {\n        this.setState({ fetching: true })\n        const response1 = await fetch('/usd')\n        const usd = await response1.json()\n        const response2 = await fetch('/cer')\n        const cer = await response2.json()\n        const response3 = await fetch('/uva')\n        const uva = await response3.json()\n        const response4 = await fetch('/uvi')\n        const uvi = await response4.json()\n        this.setState({ usd, cer, uva, uvi, fetching: false })\n    }\n\n    onCalculate = () => {\n        const { value, date, usd, cer, uva, uvi } = this.state\n        console.log(value, date)\n        if ((new Date(date)) < (new Date())) {\n\n            this.setState({ idle: false })\n\n            const data = []\n            data.push(getD(\"USD\", usd, date, value, <Currency />))\n            data.push(getD(\"UVI\", uvi, date, value, <Home />))\n            data.push(getD(\"CER\", cer, date, value))\n            data.push(getD(\"UVA\", uva, date, value))\n\n            this.setState({ data: data })\n        }\n\n    }\n\n    onChangeDate = event => this.setState({ date: event.target.value })\n\n    onValueChange = event => this.setState({ value: event.target.value })\n\n    render() {\n        const { value, idle, fetching, data } = this.state\n\n        const renderResult = (idle) ? (\n            <Box pad=\"medium\">\n                <Heading>\n                    La inflación Argentina en 2018 fue del 47,6%, la cifra más alta en los últimos 27 años.\n                </Heading>\n                <WorldMap />\n            </Box>\n        ) : <SalaryResult data={data} />\n\n        return (\n            <React.Fragment>\n                <Box direction=\"row-responsive\" pad='large'>\n\n                    <Box pad=\"medium\" gap=\"small\" >\n                        <Form onSubmit={this.onCalculate}>\n                            <Heading>Ponéte el sueldo que cobraba</Heading>\n                            <Paragraph>Por el tema de inflación, nos necesitams una calculadora para el valor real</Paragraph>\n                            <Box gap=\"small\" pad=\"medium\">\n                                <Box direction=\"row\" gap=\"small\" align=\"center\">\n                                    <Currency />\n                                    <FormField\n                                        required={true}\n                                        type=\"number\"\n                                        placeholder=\"$ Sueldo anterior\"\n                                        value={value}\n                                        onChange={this.onValueChange}\n                                    />\n                                </Box>\n                                <DateMaskedInput value={this.state.date} onChange={this.onChangeDate} />\n                                {/* s<Calendar size=\"medium\" alignSelf=\"center\" date={this.state.date} /> */}\n                            </Box>\n                            <Box align=\"end\">\n                                <Button type=\"submit\" disabled={fetching} icon={<Gremlin />} label=\"Calcular\" />\n                            </Box>\n                        </Form>\n                    </Box>\n\n                    <Box width=\"100%\" round={true} background='brand' align=\"center\" justify=\"center\">\n                        {renderResult}\n                    </Box>\n\n                </Box>\n            </React.Fragment >\n        )\n    }\n}\n\nexport default SalaryForm"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AATA;AACA;;;;;AAeA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAFA;AAAA;AACA;AADA;AAEA;AAFA;AAAA;AACA;AADA;AAGA;AAHA;AAAA;AACA;AADA;AAIA;AAJA;AAAA;AACA;AADA;AAKA;AALA;AAAA;AACA;AADA;AAMA;AANA;AAAA;AACA;AADA;AAOA;AAPA;AAAA;AACA;AADA;AAQA;AARA;AAAA;AACA;AADA;AASA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAXA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAYA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AAAA;AAEA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AAEA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;;;;;;AAtCA;AACA;AACA;;;AAqCA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AACA;AAAA;AAMA;AAAA;AAEA;AAEA;AAAA;AAAA;AAEA;AAAA;AAAA;AACA;AAAA;AAGA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAGA;AACA;AACA;AACA;AACA;AALA;AAQA;AAAA;AAAA;AAGA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AAOA;;;;AAnGA;AACA;AAqGA;;;;A","sourceRoot":""}