{"version":3,"file":"static/webpack/static/development/pages/index.js.c0938547b11876667655.hot-update.js","sources":["webpack:///./components/SalaryResult/index.js","webpack:///./node_modules/@babel/runtime-corejs2/helpers/esm/extends.js"],"sourcesContent":["import React from 'react'\nimport { Box, DataTable, Meter, Heading, Paragraph, Text } from 'grommet'\nimport { Fade, Bounce, Zoom, Rotate, Roll } from 'react-reveal';\n\nconst Row = (props) => {\n    const { icon, name, could, need } = props\n    return (\n        <React.Fragment>\n            <Fade bottom>\n                <Box>\n                    <Text>{icon}</Text>\n                    <Text>{name}</Text>\n                    <Text>{could}</Text>\n                    <Text>{need}</Text>\n                </Box>\n            </Fade>\n        </React.Fragment>\n    )\n}\n\nclass SalaryResult extends React.Component {\n    render() {\n        const { data } = this.props\n        const rows = data.map((object, index) => {\n            <Row key={index} {...object} />\n        })\n\n        return (\n            <React.Fragment>\n                <Box align=\"center\">\n                    {rows}\n                </Box>\n            </React.Fragment >\n        )\n    }\n}\n\nexport default SalaryResult","import _Object$assign from \"../../core-js/object/assign\";\nexport default function _extends() {\n  _extends = _Object$assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAEA;AAEA;AAAA;AAUA;AACA;AACA;;;;;;;;;;;;;AACA;AAAA;AAEA;AACA;AAAA;AAAA;AACA;AAEA;AAEA;AAAA;AAKA;;;;AAdA;AACA;AAgBA;;;;;;;;;;;;ACrCA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;A","sourceRoot":""}